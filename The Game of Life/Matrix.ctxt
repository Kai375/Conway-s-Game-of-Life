#BlueJ class context
comment0.target=Matrix
comment0.text=\r\n\ This\ is\ the\ Matrix\ Class,\ here\ we\ will\ create\ a\ Matrix\ object.\r\n
comment1.params=width\ height
comment1.target=Matrix(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Matrix\r\n\ @param\ int\ width\r\n\ @param\ int\ height\r\n
comment2.params=
comment2.target=void\ fillMatrix()
comment2.text=\r\n\ The\ fillMatrix\ method\ will...\ fill\ given\ matrix\ with\ random\ 0s\ and\ 1s.\r\n
comment3.params=x\ y
comment3.target=void\ setAlive(int,\ int)
comment4.params=x\ y
comment4.target=void\ setDead(int,\ int)
comment5.params=x\ y
comment5.target=int\ countAliveNeighbours(int,\ int)
comment5.text=\r\n\ The\ countAliveNeighbours\ method\ will\ count\ how\ many\ neighbours\ a\ specific\ (valid)\ spot\ in\ the\ matrix\ got.\r\n\ \r\n\ @param\ int\ x\r\n\ @param\ int\ y\r\n
comment6.params=x\ y
comment6.target=int\ getState(int,\ int)
comment6.text=\r\n\ The\ getState\ method\ will\ check\ for\ each\ set\ of\ (x,y)\ coordinates\ that\ they\ represent\ a\ valid\ spot\ (or\ not)\ in\ the\ matrix,\ and\ report\ it\ to\ countAliveNeighbours\ method.\r\n\ \r\n\ @param\ int\ x\r\n\ @param\ int\ y\r\n
comment7.params=
comment7.target=int[][]\ getMatrix()
comment8.params=
comment8.target=void\ nextGeneration()
comment8.text=\r\n\ The\ nextGeneration\ method\ tasked\ with\ matching\ the\ number\ of\ live\ neighbours\ with\ one\ of\ the\ CONWAY\ rules.\r\n
numComments=9
